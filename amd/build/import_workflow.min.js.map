{"version":3,"file":"import_workflow.min.js","sources":["../src/import_workflow.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Workflow step select javascript.\n *\n * @module     tool_trigger/workflow\n * @class      Workflow\n * @copyright  2018 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.4\n */\n\ndefine(\n  ['jquery', 'core/str', 'core/modal_factory', 'core/modal_events','core/templates', 'core/ajax', 'core/fragment',\n      'core/notification'],\n        function ($, Str, ModalFactory, ModalEvents, Templates, ajax, Fragment, Notification) {\n\n            /**\n             * Module level variables.\n             */\n            var ImportWorkflow = {};\n            var contextid;\n            var modalObj;\n            var spinner = '<p class=\"text-center\">'\n                + '<i class=\"fa fa-spinner fa-pulse fa-2x fa-fw\"></i><span class=\"sr-only\">Loading...</span>'\n                + '</p>';\n\n            /**\n             * Updates the body of the modal window.\n             *\n             * @private\n             */\n            function updateModalBody() {\n                var formdata = {};\n                var params = {jsonformdata: JSON.stringify(formdata)};\n                modalObj.setBody(spinner);\n                modalObj.setBody(Fragment.loadFragment('tool_trigger', 'new_import_form', contextid, params));\n            }\n\n            /**\n             * Updates Moodle form with selected information.\n             *\n             * @param {event} e The event from the modal submitting.\n             * @private\n             */\n            function processModalForm(e) {\n                e.preventDefault(); // Stop modal from closing.\n\n                // Form data.\n                var fileform = modalObj.getRoot().find('form').serialize();\n                modalObj.setBody(spinner);\n\n                // Submit form via ajax to do server side validation.\n                ajax.call([{\n                    methodname: 'tool_trigger_process_import_form',\n                    args: {\n                        jsonformdata: JSON.stringify(fileform)\n                    },\n                }])[0].done(function(responsejson) {\n                    var responseobj = JSON.parse(responsejson);\n\n                    if (responseobj.errorcode == 'success') {\n                        // Validation succeeded! Update the list of workflows.\n                        location.reload(true);  // We're lazy so we'll just reload the page.\n                    } else {\n                        Object.keys(responseobj.message).forEach(function(key) {\n                            Notification.addNotification({\n                                message: responseobj.message[key],\n                                type: 'error'\n                            });\n                        });\n                    }\n\n                    modalObj.hide(); // Hide the modal.\n\n                }).fail(function() {\n                    // Validation failed!\n                    Notification.addNotification({\n                        message: Str.get_string('errorimportworkflow', 'tool_trigger'),\n                        type: 'error'\n                    });\n\n                    modalObj.hide(); // Hide the modal.\n                });\n            }\n\n            /**\n             * Initialise the class.\n             *\n             * @param {int} context the context id from PHP.\n             * @public\n             */\n            ImportWorkflow.init = function(context) {\n                // Save the context ID in a closure variable.\n                contextid = context;\n\n                // Get the Title String.\n                Str.get_string('importmodaltitle', 'tool_trigger').then(function(title) {\n                    // Create the Modal.\n                    ModalFactory.create({\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        title: title,\n                        body: spinner,\n                        large: true\n                    }, $('[name=importbtn]'))\n                    .done(function(modal) {\n                        modalObj = modal;\n                        modalObj.getRoot().on(ModalEvents.save, processModalForm);\n                        modalObj.getRoot().on(ModalEvents.hidden, updateModalBody);\n                        updateModalBody();\n                    });\n                });\n\n            };\n\n            return ImportWorkflow;\n        });\n"],"names":["define","$","Str","ModalFactory","ModalEvents","Templates","ajax","Fragment","Notification","contextid","modalObj","ImportWorkflow","spinner","updateModalBody","params","jsonformdata","JSON","stringify","setBody","loadFragment","processModalForm","e","preventDefault","fileform","getRoot","find","serialize","call","methodname","args","done","responsejson","responseobj","parse","errorcode","location","reload","Object","keys","message","forEach","key","addNotification","type","hide","fail","get_string","init","context","then","title","create","types","SAVE_CANCEL","body","large","modal","on","save","hidden"],"mappings":";;;;;;;;;AAyBAA,sCACE,CAAC,SAAU,WAAY,qBAAsB,oBAAoB,iBAAkB,YAAa,gBAC5F,sBACE,SAAUC,EAAGC,IAAKC,aAAcC,YAAaC,UAAWC,KAAMC,SAAUC,kBAMhEC,UACAC,SAFAC,eAAiB,GAGjBC,QAAU,gIASLC,sBAEDC,OAAS,CAACC,aAAcC,KAAKC,UADlB,KAEfP,SAASQ,QAAQN,SACjBF,SAASQ,QAAQX,SAASY,aAAa,eAAgB,kBAAmBV,UAAWK,kBAShFM,iBAAiBC,GACtBA,EAAEC,qBAGEC,SAAWb,SAASc,UAAUC,KAAK,QAAQC,YAC/ChB,SAASQ,QAAQN,SAGjBN,KAAKqB,KAAK,CAAC,CACPC,WAAY,mCACZC,KAAM,CACFd,aAAcC,KAAKC,UAAUM,cAEjC,GAAGO,MAAK,SAASC,kBACbC,YAAchB,KAAKiB,MAAMF,cAEA,WAAzBC,YAAYE,UAEZC,SAASC,QAAO,GAEhBC,OAAOC,KAAKN,YAAYO,SAASC,SAAQ,SAASC,KAC9CjC,aAAakC,gBAAgB,CACzBH,QAASP,YAAYO,QAAQE,KAC7BE,KAAM,aAKlBjC,SAASkC,UAEVC,MAAK,WAEJrC,aAAakC,gBAAgB,CACzBH,QAASrC,IAAI4C,WAAW,sBAAuB,gBAC/CH,KAAM,UAGVjC,SAASkC,iBAUjBjC,eAAeoC,KAAO,SAASC,SAE3BvC,UAAYuC,QAGZ9C,IAAI4C,WAAW,mBAAoB,gBAAgBG,MAAK,SAASC,OAE7D/C,aAAagD,OAAO,CAChBR,KAAMxC,aAAaiD,MAAMC,YACzBH,MAAOA,MACPI,KAAM1C,QACN2C,OAAO,GACRtD,EAAE,qBACJ6B,MAAK,SAAS0B,QACX9C,SAAW8C,OACFhC,UAAUiC,GAAGrD,YAAYsD,KAAMtC,kBACxCV,SAASc,UAAUiC,GAAGrD,YAAYuD,OAAQ9C,iBAC1CA,yBAMLF"}